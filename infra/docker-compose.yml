# Create .env files from the .env.example files in `frontend`, `backend`, and `infra` directories
# before running `docker compose up`.
# e.g. cp frontend/.env.example frontend/.env

services:
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    env_file:
      - ../frontend/.env
    depends_on:
      api:
        condition: service_healthy
    networks:
      - avook_net

  api:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ../backend/.env
    environment:
      S3_ENDPOINT: http://object-store:4566
      S3_BUCKET: audiovook-test
    depends_on:
      db:
        condition: service_healthy
      s3-setup:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - avook_net

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=avook
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d avook"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - avook_net

  object-store:
    image: localstack/localstack:latest
    ports:
      - "9000:4566"
    environment:
      - SERVICES=s3
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - localstack_data:/var/lib/localstack
    networks:
      - avook_net

  s3-setup:
    image: amazon/aws-cli
    depends_on:
      - object-store
    networks:
      - avook_net
    environment:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_DEFAULT_REGION: us-east-1
      S3_BUCKET: audiovook-test
    volumes:
      - ./s3-cors.json:/tmp/s3-cors.json:ro
      - ./s3-bucket-policy.json:/tmp/s3-bucket-policy.json:ro
    entrypoint: >
      /bin/sh -c "
      until aws --endpoint-url http://object-store:4566 s3 ls >/dev/null 2>&1; do sleep 1; done;
      aws --endpoint-url http://object-store:4566 s3 mb s3://$${S3_BUCKET} 2>/dev/null || true;
      aws --endpoint-url http://object-store:4566 s3api put-bucket-policy --bucket $${S3_BUCKET} --policy file:///tmp/s3-bucket-policy.json;
      aws --endpoint-url http://object-store:4566 s3api put-bucket-cors --bucket $${S3_BUCKET} --cors-configuration file:///tmp/s3-cors.json;
      "
    restart: on-failure

  proxy:
    image: nginx:latest
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/templates/default.conf.template:ro
    env_file:
      - ./.env
    depends_on:
      - object-store
    networks:
      - avook_net

networks:
  avook_net:
    driver: bridge

volumes:
  postgres_data:
  localstack_data:
