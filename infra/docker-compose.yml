# Create .env files from the .env.example files in `frontend`, `backend`, and `infra` directories
# before running `docker compose up`.
# e.g. cp frontend/.env.example frontend/.env

services:
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    env_file:
      - ../frontend/.env
    depends_on:
      api:
        condition: service_healthy
    networks:
      - avook_net

  api:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ../backend/.env
    depends_on:
      - db
      - object-store
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - avook_net

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=avook
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - avook_net

  object-store:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - avook_net

  minio-setup:
    image: minio/mc
    depends_on:
      - object-store
    networks:
      - avook_net
    env_file:
      - ./.env
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set myminio http://object-store:9000 $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb myminio/$$S3_BUCKET_NAME --ignore-existing;
      /usr/bin/mc policy set download myminio/$$S3_BUCKET_NAME;
      "

  proxy:
    image: nginx:latest
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/templates/default.conf.template:ro
    env_file:
      - ./.env
    depends_on:
      - object-store
    networks:
      - avook_net

networks:
  avook_net:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
